// Generated by CoffeeScript 1.10.0
(function() {
  var TransformerBase,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  TransformerBase = require('./base');


  /*
   * Remove `{type: 'EmptyStatement'}` from the body.
   */

  module.exports = (function(superClass) {
    extend(_Class, superClass);

    function _Class() {
      return _Class.__super__.constructor.apply(this, arguments);
    }

    _Class.prototype.BlockStatementExit = function(node) {
      return this.removeEmptyStatementsFromBody(node);
    };

    _Class.prototype.SwitchCaseExit = function(node) {
      return this.removeEmptyStatementsFromBody(node, 'consequent');
    };

    _Class.prototype.SwitchStatementExit = function(node) {
      return this.removeEmptyStatementsFromBody(node, 'cases');
    };

    _Class.prototype.ProgramExit = function(node) {
      return this.removeEmptyStatementsFromBody(node, 'body');
    };

    _Class.prototype.removeEmptyStatementsFromBody = function(node, body) {
      if (body == null) {
        body = 'body';
      }
      node[body] = node[body].filter(function(n) {
        return n.type !== 'EmptyStatement';
      });
      return node;
    };

    return _Class;

  })(TransformerBase);

}).call(this);

//# sourceMappingURL=empty_statements.js.map
