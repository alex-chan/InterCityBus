// Generated by CoffeeScript 1.10.0
(function() {
  var eachGroup;

  require('./setup');

  eachGroup = require('../lib/support/specs_iterator').eachGroup;

  eachGroup(function(group) {
    var nope, run;
    nope = !!process.env.ALL;
    run = !nope && group.pending ? xdescribe : describe;
    return run(group.name, function() {
      return group.specs.forEach(function(spec) {
        var ref, ref1;
        run = !nope && ((ref = spec.meta) != null ? ref.pending : void 0) ? xit : ((ref1 = spec.meta) != null ? ref1.only : void 0) ? it.only : it;
        return run(spec.name, (function(spec) {
          return function() {
            var descs, options, result;
            options = spec.meta.options || {};
            if (spec.meta.error) {
              expect(function() {
                var result;
                return result = js2coffee.build(spec.input, options);
              }).to["throw"](spec.meta.error);
              return;
            }
            result = js2coffee.build(spec.input, options);
            expect(result.code).eql(spec.output);
            if (spec.meta.warnings) {
              descs = result.warnings.map(function(w) {
                return w.description;
              }).join(" ;; ");
              return spec.meta.warnings.forEach(function(expected) {
                if (expected instanceof RegExp) {
                  return expect(descs).match(expected);
                } else {
                  return expect(descs).include(expected);
                }
              });
            } else {
              if (result.warnings.length > 0) {
                return result.warnings.forEach(function(w) {
                  throw new Error("Unexpected warning: " + w.description);
                });
              }
            }
          };
        })(spec));
      });
    });
  });

}).call(this);

//# sourceMappingURL=specs.js.map
