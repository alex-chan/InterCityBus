// Generated by CoffeeScript 1.10.0
(function() {
  var LocalStrategy, localAuthenticate, passport;

  passport = require('passport');

  LocalStrategy = require('passport-local').Strategy;

  localAuthenticate = function(User, name, password, done) {
    return User.find({
      where: {
        name: name
      }
    }).then(function(user) {
      if (!user) {
        return done(null, false, {
          message: 'Username does not exists or username/password mismatch'
        });
      }
      return user.authenticate(password, function(authError, authenticated) {
        if (authError) {
          return done(authError);
        }
        if (!authenticated) {
          return done(null, false, {
            message: 'Username does not exists or username/password mismatch'
          });
        } else {
          return done(null, user);
        }
      });
    })["catch"](function(err) {
      return done(err);
    });
  };

  exports.setup = function(User, config) {
    return passport.use(new LocalStrategy({
      usernameField: 'name',
      passwordField: 'password'
    }, function(email, password, done) {
      return localAuthenticate(User, email, password, done);
    }));
  };

}).call(this);

//# sourceMappingURL=passport.js.map
