// Generated by CoffeeScript 1.9.3
(function() {
  var Promise, _, express, model, router;

  express = require('express');

  router = express.Router();

  _ = require("underscore");

  Promise = require("sequelize").Promise;

  model = require("../lib/model");

  router.get('/', function(req, res, next) {
    return res.render('index', {
      title: 'InterCity Bus!'
    });
  });

  router.get('/busline/:id', function(req, res, next) {
    var gbusline;
    gbusline = null;
    return model.Busline.findById(req.params.id).then(function(busline) {
      gbusline = busline;
      return busline.getStartCity();
    }).then(function(city) {
      gbusline.startCity = {
        id: city.id,
        name: city.name,
        stations: []
      };
      return gbusline.getEndCity();
    }).then(function(city2) {
      gbusline.endCity = {
        id: city2.id,
        name: city2.name,
        stations: []
      };
      return gbusline.getStartTime();
    }).then(function(time) {
      gbusline.starttimes = time;
      return gbusline.getStations();
    }).then(function(stations) {
      gbusline.stations = stations;
      return _.each(stations, function(element, index, list) {
        if (element.cityId === gbusline.startCity.id) {
          return gbusline.startCity.stations.push(element);
        } else if (element.cityId === gbusline.endCity.id) {
          return gbusline.endCity.stations.push(element);
        }
      });
    }).then(function() {
      return res.render('busline', {
        busline: gbusline
      });
    });
  });

  router.get('/buslines', function(req, res, next) {
    return model.Busline.findAll().then(function(buslines) {
      var bus;
      bus = _.map(buslines, function(val, key, lst) {
        return val.getStartCity().then(function(city) {
          lst[key].startCity = city.name;
          return val.getEndCity();
        }).then(function(city2) {
          lst[key].endCity = city2.name;
          return val.getStartTime();
        }).then(function(tm) {
          lst[key].startTime = tm;
          return Promise.resolve();
        });
      });
      return Promise.all(bus).then(function() {
        console.log(buslines[0].startCity);
        return res.render('buslines', {
          buslines: buslines
        });
      });
    });
  });

  router.get('/cities', function(req, res, next) {
    return model.City.findAll().then(function(cities) {
      return res.render('city', {
        cities: cities
      });
    });
  });

  module.exports = router;

}).call(this);
