// Generated by CoffeeScript 1.9.3
(function() {
  var Promise, _, express, fulfillBusline, model, router;

  express = require('express');

  router = express.Router();

  _ = require("underscore");

  Promise = require("sequelize").Promise;

  model = require("../lib/model");

  router.get('/', function(req, res, next) {
    return model.City.findAll().then(function(cities) {
      return res.render('index', {
        cities: cities
      });
    });
  });

  fulfillBusline = function(busline) {
    var gbusline;
    gbusline = busline;
    return busline.getStartCity().then(function(city) {
      gbusline.startCity = {
        id: city.id,
        name: city.name,
        stations: []
      };
      return gbusline.getEndCity();
    }).then(function(city2) {
      gbusline.endCity = {
        id: city2.id,
        name: city2.name,
        stations: []
      };
      return gbusline.getStartTime();
    }).then(function(time) {
      gbusline.starttimes = time;
      return gbusline.getStations();
    }).then(function(stations) {
      gbusline.stations = stations;
      _.each(stations, function(element, index, list) {
        if (element.cityId === gbusline.startCity.id) {
          return gbusline.startCity.stations.push(element);
        } else if (element.cityId === gbusline.endCity.id) {
          return gbusline.endCity.stations.push(element);
        }
      });
      return gbusline;
    });
  };

  router.get('/busline/:id', function(req, res, next) {
    return model.Busline.findById(req.params.id).then(function(busline) {
      return fulfillBusline(busline);
    }).then(function(busline) {
      return res.render('busline', {
        busline: busline
      });
    });
  });

  router.get('/buslines', function(req, res, next) {
    return model.Busline.findAll().then(function(buslines) {
      buslines = _.map(buslines, function(val, key, lst) {
        return fulfillBusline(val);
      });
      return Promise.all(buslines);
    }).then(function(buslines) {
      return res.render('buslines', {
        buslines: buslines
      });
    });
  });

  router.get('/search', function(req, res, next) {
    return model.Busline.findAll({
      where: {
        startCityId: req.query.start,
        endCityId: req.query.end
      }
    }).then(function(buslines) {
      buslines = _.map(buslines, function(val, key, lst) {
        return fulfillBusline(val);
      });
      return Promise.all(buslines);
    }).then(function(buslines) {
      if (buslines.length === 0) {
        return res.render('nobus');
      } else {
        return res.render('buslines', {
          buslines: buslines
        });
      }
    })["catch"](function(err) {
      return res.end(err.toString());
    });
  });

  router.get('/cities', function(req, res, next) {
    return model.City.findAll().then(function(cities) {
      return res.render('city', {
        cities: cities
      });
    });
  });

  module.exports = router;

}).call(this);
